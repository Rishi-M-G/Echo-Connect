// --------------------------------------------------------
// Code generated by Papyrus Java

// --------------------------------------------------------

// -- Code Modified by: Murugesan Gopalakrishnan, Rishi

package EchoConnect;

import java.time.LocalDate;
import java.util.Date;
import java.util.List;

import EchoConnect.Person.Customer;
import EchoConnect.Services.*;


/************************************************************/
/**
 * 
 */
public class Billing {
	/**
	 *  Billing Attributes and Constructors
	 *  
	 */
	// Billing Attributes
	public int BillID;
	public Date BillDate;
	public Date DueDate;
	public int DueAmount;
	public String BillStatus;
	public int OutstandingAmount;
	public int MiscCharges;
	public String BillCycle;
	private Customer customer;

	//Constructor
	public Billing(int billID, Date billDate, Date dueDate, int dueAmount, String billStatus,
            int outstandingAmount, int miscCharges, String billCycle) {
		this.BillID = billID;
        this.BillDate = billDate;
        this.DueDate = dueDate;
        this.DueAmount = dueAmount;
        this.BillStatus = billStatus;
        this.OutstandingAmount = outstandingAmount;
        this.MiscCharges = miscCharges;
        this.BillCycle = billCycle;
	}
	
	public void CalculateTotalBillAmount(Customer customer) {
		
		this.customer = customer;
		//Calculate total bill amount based on services and late charges
		int serviceCharges = CalculateServiceCharges();
		DueAmount = serviceCharges + MiscCharges;
		OutstandingAmount = DueAmount;
	}
	
	private int CalculateServiceCharges()
	{
		int totalServiceCharges = 0;
		
		for(Services service: customer.getMyServices())
		{
			int planID = getPlanID(service);
			int planCost = lookupPlanCost(planID);
			totalServiceCharges = totalServiceCharges + planCost;
		}
		
		return totalServiceCharges;
	}
	
	private int getPlanID(Services service) {
		if(service instanceof Mobility) {
			Mobility mobilityService = (Mobility) service;
			return mobilityService.getPlanID();
		}
		if(service instanceof WiFi) {
			WiFi wifiService = (WiFi) service;
			return wifiService.getPlanID();
		}
		if(service instanceof Bundle) {
			Bundle bundleService = (Bundle) service;
			return bundleService.getPlanID();
		}
		if(service instanceof TV) {
			TV tvService = (TV) service;
			return tvService.getPlanID();
		}
		
		return 0;
	}
	
	private int lookupPlanCost (int planID)
	{
		for(Services service: customer.getMyServices()) {
			if (service instanceof Mobility && ((Mobility) service).getPlanID() == planID) {
				return ((Mobility) service).planCost;
			} else if (service instanceof WiFi && ((WiFi) service).getPlanID() == planID) {
				return ((WiFi) service).planCost;
			} else if (service instanceof TV && ((TV) service).getPlanID() == planID) {
				return ((TV) service).planCost;
			} else if (service instanceof Bundle && ((Bundle) service).getPlanID() == planID) {
				return ((Bundle) service).planCost;
			}
		}
		return 0;
		
	}
	/**
	 * Calculate late charges based on due date and current date
	 */
	public void CalculateLateCharges() {
		Date currentDate = new Date();
		
		//Calculate days overdue
		long daysOverdue = currentDate.getTime() - DueDate.getTime();
		daysOverdue = daysOverdue / (1000*60*60*24);
		
		//Applying Late Charge Rules
		double lateChargePercentage = 0.02; // 2% late charge per day overdue
		double lateCharges =  daysOverdue * DueAmount * lateChargePercentage;
		
		//update outstanding with late charges
		OutstandingAmount = (int) (OutstandingAmount + lateCharges);
	}

	/**
	 * Download Bill and return the bill content
	 */
	public void DownloadBill() {
		System.out.println(ViewBill());
		
		System.out.println("Bill has been downloaded in the system, check downloads");
		
	}

	/**
	 * View Bill details (printing to console)
	 */
	public String ViewBill() {
		String billContent = "Bill ID: " + BillID + "\n"
                + "Bill Date: " + BillDate + "\n"
                + "Due Date: " + DueDate + "\n"
                + "Due Amount: " + DueAmount + "\n"
                + "Bill Status: " + BillStatus + "\n"
                + "Outstanding Amount: " + OutstandingAmount + "\n"
                + "Misc Charges: " + MiscCharges + "\n"
                + "Bill Cycle: " + BillCycle + "\n";
		
		return billContent;
	}

	public Date getDueDate() {
		// TODO Auto-generated method stub
		return DueDate;
	}

	/**
	 * 
	 */
//	public void ViewMonthlyBill() {
//	}
}
